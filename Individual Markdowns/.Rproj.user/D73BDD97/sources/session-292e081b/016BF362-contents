---
title: "STA108_TermProjectEdits"
author: "Gabriel Jones"
date: "2023-11-23"
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```

```{r}
# Libraries
library(readr)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(knitr)
library(plotrix)
library(ggpubr)
library(MASS)
library(lindia)
library(leaps)
library(car)
```

```{r}
# Load Data
countries <- read.csv("../countries.csv")
countries <- janitor::clean_names(countries)
```

## Single Linear Regression Models & Analysis

**Life Expectancy Analysis**

```{r}
# Life Expectancy QQ Plot
ggplot(data=countries, aes(sample=life_expectancy))+
  geom_qq(color="forestgreen", size=1.3)+
  geom_qq_line()+
  labs(title="Response QQ Plot",
       x="Theoretical Quantiles",
       y="Sample Quantiles")
```

**Life Expectancy \~ Land Area**

```{r}
# Variable Names
x.lab <- "Land Area" #<change>
x.dat <- countries$land_area #<change>

y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)

  
# Create Linear Model
landarea_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
landarea_lm_summary <- summary(landarea_lm) #<change>
row.names(landarea_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>


# Display Values
kable(landarea_lm_summary$coefficients, #<change>
      caption=title)


# Scatterplot
landarea_scatter <- countries%>% #<change>
  ggplot(aes(y=life_expectancy, 
             x=x.dat))+
  geom_point(color='cyan4')+
  geom_smooth(method='lm', color="black")+
  labs(title=title,
       x=x.lab,
       y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual Plot
landarea_resid <- countries%>%  #<change>
  ggplot(aes(x=fitted(landarea_lm), #<change>
             y=residuals(landarea_lm) #<change>
             ))+
  geom_point(color="darkgoldenrod", shape=21)+
  geom_hline(yintercept=0)+
  labs(title="Residuals Against Fitted Values",
       x="Fitted Values",
       y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual QQ Plot
landarea_ResidQQ <- landarea_lm%>% #<change>
  ggplot(aes(sample=residuals(landarea_lm)))+ #<change>
  geom_qq(color="brown3", size=1.3)+
  geom_qq_line()+
  labs(title="Residual QQ Plot",
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Predictor QQ Plot
landarea_QQ <- landarea_lm%>% #<change>
  ggplot(aes(sample=x.dat))+
  geom_qq(color="forestgreen", size=1.3)+
  geom_qq_line()+
  labs(title=paste(x.lab, "QQ Plot"),
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


ggarrange(landarea_scatter, landarea_resid) #<change>
ggarrange(landarea_QQ, landarea_ResidQQ) #<change>
```

**Life Expectancy \~ Birth Rate**

```{r}
# Variable Names
x.lab <- "Birth Rate" #<change>
x.dat <- countries$birth_rate #<change>

y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)

  
# Create Linear Model
birthrate_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
birthrate_lm_summary <- summary(birthrate_lm) #<change>
row.names(birthrate_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>


# Display Values
kable(birthrate_lm_summary$coefficients, #<change>
      caption=title)


# Scatterplot
birthrate_scatter <- countries%>% #<change>
  ggplot(aes(y=life_expectancy, 
             x=x.dat))+
  geom_point(color='cyan4')+
  geom_smooth(method='lm', color="black")+
  labs(title=title,
       x=x.lab,
       y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual Plot
birthrate_resid <- countries%>%  #<change>
  ggplot(aes(x=fitted(birthrate_lm), #<change>
             y=residuals(birthrate_lm) #<change>
             ))+
  geom_point(color="darkgoldenrod", shape=21)+
  geom_hline(yintercept=0)+
  labs(title="Residuals Against Fitted Values",
       x="Fitted Values",
       y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual QQ Plot
birthrate_ResidQQ <- birthrate_lm%>% #<change>
  ggplot(aes(sample=residuals(birthrate_lm)))+ #<change>
  geom_qq(color="brown3", size=1.3)+
  geom_qq_line()+
  labs(title="Residual QQ Plot",
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Predictor QQ Plot
birthrate_QQ <- birthrate_lm%>% #<change>
  ggplot(aes(sample=x.dat))+
  geom_qq(color="forestgreen", size=1.3)+
  geom_qq_line()+
  labs(title=paste(x.lab, "QQ Plot"),
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


ggarrange(birthrate_scatter, birthrate_resid) #<change>
ggarrange(birthrate_QQ, birthrate_ResidQQ) #<change>
```

**Life Expectancy \~ Cell**

```{r}
# Variable Names
x.lab <- "Cell" #<change>
x.dat <- countries$cell #<change>

y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)

  
# Create Linear Model
cell_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
cell_lm_summary <- summary(cell_lm) #<change>
row.names(cell_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>


# Display Values
kable(cell_lm_summary$coefficients, #<change>
      caption=title)


# Scatterplot
cell_scatter <- countries%>% #<change>
  ggplot(aes(y=life_expectancy, 
             x=x.dat))+
  geom_point(color='cyan4')+
  geom_smooth(method='lm', color="black")+
  labs(title=title,
       x=x.lab,
       y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual Plot
cell_resid <- countries%>%  #<change>
  ggplot(aes(x=fitted(cell_lm), #<change>
             y=residuals(cell_lm) #<change>
             ))+
  geom_point(color="darkgoldenrod", shape=21)+
  geom_hline(yintercept=0)+
  labs(title="Residuals Against Fitted Values",
       x="Fitted Values",
       y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual QQ Plot
cell_ResidQQ <- cell_lm%>% #<change>
  ggplot(aes(sample=residuals(cell_lm)))+ #<change>
  geom_qq(color="brown3", size=1.3)+
  geom_qq_line()+
  labs(title="Residual QQ Plot",
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Predictor QQ Plot
cell_QQ <- cell_lm%>% #<change>
  ggplot(aes(sample=x.dat))+
  geom_qq(color="forestgreen", size=1.3)+
  geom_qq_line()+
  labs(title=paste(x.lab, "QQ Plot"),
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


ggarrange(cell_scatter, cell_resid) #<change>
ggarrange(cell_QQ, cell_ResidQQ) #<change>
```

**Life Expectancy \~ CO2**

```{r}
# Variable Names
x.lab <- "CO2" #<change>
x.dat <- countries$co2 #<change>

y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)

  
# Create Linear Model
co_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
co_lm_summary <- summary(co_lm) #<change>
row.names(co_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>


# Display Values
kable(co_lm_summary$coefficients, #<change>
      caption=title)


# Scatterplot
co_scatter <- countries%>% #<change>
  ggplot(aes(y=life_expectancy, 
             x=x.dat))+
  geom_point(color='cyan4')+
  geom_smooth(method='lm', color="black")+
  labs(title=title,
       x=x.lab,
       y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual Plot
co_resid <- countries%>%  #<change>
  ggplot(aes(x=fitted(co_lm), #<change>
             y=residuals(co_lm) #<change>
             ))+
  geom_point(color="darkgoldenrod", shape=21)+
  geom_hline(yintercept=0)+
  labs(title="Residuals Against Fitted Values",
       x="Fitted Values",
       y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual QQ Plot
co_ResidQQ <- co_lm%>% #<change>
  ggplot(aes(sample=residuals(co_lm)))+ #<change>
  geom_qq(color="brown3", size=1.3)+
  geom_qq_line()+
  labs(title="Residual QQ Plot",
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Predictor QQ Plot
co_QQ <- co_lm%>% #<change>
  ggplot(aes(sample=x.dat))+
  geom_qq(color="forestgreen", size=1.3)+
  geom_qq_line()+
  labs(title=paste(x.lab, "QQ Plot"),
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


ggarrange(co_scatter, co_resid) #<change>
ggarrange(co_QQ, co_ResidQQ) #<change>
```

**Life Expectancy \~ Elderly Population**

```{r}
# Variable Names
x.lab <- "Elderly Population" #<change>
x.dat <- countries$elderly_pop #<change>

y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)

  
# Create Linear Model
elder_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
elder_lm_summary <- summary(elder_lm) #<change>
row.names(elder_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>


# Display Values
kable(elder_lm_summary$coefficients, #<change>
      caption=title)


# Scatterplot
elder_scatter <- countries%>% #<change>
  ggplot(aes(y=life_expectancy, 
             x=x.dat))+
  geom_point(color='cyan4')+
  geom_smooth(method='lm', color="black")+
  labs(title=title,
       x=x.lab,
       y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual Plot
elder_resid <- countries%>%  #<change>
  ggplot(aes(x=fitted(elder_lm), #<change>
             y=residuals(elder_lm) #<change>
             ))+
  geom_point(color="darkgoldenrod", shape=21)+
  geom_hline(yintercept=0)+
  labs(title="Residuals Against Fitted Values",
       x="Fitted Values",
       y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual QQ Plot
elder_ResidQQ <- elder_lm%>% #<change>
  ggplot(aes(sample=residuals(elder_lm)))+ #<change>
  geom_qq(color="brown3", size=1.3)+
  geom_qq_line()+
  labs(title="Residual QQ Plot",
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Predictor QQ Plot
elder_QQ <- elder_lm%>% #<change>
  ggplot(aes(sample=x.dat))+
  geom_qq(color="forestgreen", size=1.3)+
  geom_qq_line()+
  labs(title=paste(x.lab, "QQ Plot"),
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


ggarrange(elder_scatter, elder_resid) #<change>
ggarrange(elder_QQ, elder_ResidQQ) #<change>
```

**Life Expectancy \~ GDP**

```{r}
# Variable Names
x.lab <- "GDP" #<change>
x.dat <- countries$gdp #<change>

y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)

  
# Create Linear Model
gdp_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
gdp_lm_summary <- summary(gdp_lm) #<change>
row.names(gdp_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>


# Display Values
kable(gdp_lm_summary$coefficients, #<change>
      caption=title)


# Scatterplot
gdp_scatter <- countries%>% #<change>
  ggplot(aes(y=life_expectancy, 
             x=x.dat))+
  geom_point(color='cyan4')+
  geom_smooth(method='lm', color="black")+
  labs(title=title,
       x=x.lab,
       y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual Plot
gdp_resid <- countries%>%  #<change>
  ggplot(aes(x=fitted(gdp_lm), #<change>
             y=residuals(gdp_lm) #<change>
             ))+
  geom_point(color="darkgoldenrod", shape=21)+
  geom_hline(yintercept=0)+
  labs(title="Residuals Against Fitted Values",
       x="Fitted Values",
       y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual QQ Plot
gdp_ResidQQ <- gdp_lm%>% #<change>
  ggplot(aes(sample=residuals(gdp_lm)))+ #<change>
  geom_qq(color="brown3", size=1.3)+
  geom_qq_line()+
  labs(title="Residual QQ Plot",
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Predictor QQ Plot
gdp_QQ <- gdp_lm%>% #<change>
  ggplot(aes(sample=x.dat))+
  geom_qq(color="forestgreen", size=1.3)+
  geom_qq_line()+
  labs(title=paste(x.lab, "QQ Plot"),
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


ggarrange(gdp_scatter, gdp_resid) #<change>
ggarrange(gdp_QQ, gdp_ResidQQ) #<change>
```

**Life Expectancy \~ Health**

```{r}
# Variable Names
x.lab <- "Health" #<change>
x.dat <- countries$health #<change>

y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)

  
# Create Linear Model
health_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
health_lm_summary <- summary(health_lm) #<change>
row.names(health_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>


# Display Values
kable(health_lm_summary$coefficients, #<change>
      caption=title)


# Scatterplot
health_scatter <- countries%>% #<change>
  ggplot(aes(y=life_expectancy, 
             x=x.dat))+
  geom_point(color='cyan4')+
  geom_smooth(method='lm', color="black")+
  labs(title=title,
       x=x.lab,
       y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual Plot
health_resid <- countries%>%  #<change>
  ggplot(aes(x=fitted(health_lm), #<change>
             y=residuals(health_lm) #<change>
             ))+
  geom_point(color="darkgoldenrod", shape=21)+
  geom_hline(yintercept=0)+
  labs(title="Residuals Against Fitted Values",
       x="Fitted Values",
       y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual QQ Plot
health_ResidQQ <- health_lm%>% #<change>
  ggplot(aes(sample=residuals(health_lm)))+ #<change>
  geom_qq(color="brown3", size=1.3)+
  geom_qq_line()+
  labs(title="Residual QQ Plot",
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Predictor QQ Plot
health_QQ <- health_lm%>% #<change>
  ggplot(aes(sample=x.dat))+
  geom_qq(color="forestgreen", size=1.3)+
  geom_qq_line()+
  labs(title=paste(x.lab, "QQ Plot"),
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


ggarrange(health_scatter, health_resid) #<change>
ggarrange(health_QQ, health_ResidQQ) #<change>
```

**Life Expectancy \~ Internet**

```{r}
# Variable Names
x.lab <- "Internet" #<change>
x.dat <- countries$internet #<change>

y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)

  
# Create Linear Model
internet_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
internet_lm_summary <- summary(internet_lm) #<change>
row.names(internet_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>


# Display Values
kable(internet_lm_summary$coefficients, #<change>
      caption=title)


# Scatterplot
internet_scatter <- countries%>% #<change>
  ggplot(aes(y=life_expectancy, 
             x=x.dat))+
  geom_point(color='cyan4')+
  geom_smooth(method='lm', color="black")+
  labs(title=title,
       x=x.lab,
       y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual Plot
internet_resid <- countries%>%  #<change>
  ggplot(aes(x=fitted(internet_lm), #<change>
             y=residuals(internet_lm) #<change>
             ))+
  geom_point(color="darkgoldenrod", shape=21)+
  geom_hline(yintercept=0)+
  labs(title="Residuals Against Fitted Values",
       x="Fitted Values",
       y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual QQ Plot
internet_ResidQQ <- internet_lm%>% #<change>
  ggplot(aes(sample=residuals(internet_lm)))+ #<change>
  geom_qq(color="brown3", size=1.3)+
  geom_qq_line()+
  labs(title="Residual QQ Plot",
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Predictor QQ Plot
internet_QQ <- internet_lm%>% #<change>
  ggplot(aes(sample=x.dat))+
  geom_qq(color="forestgreen", size=1.3)+
  geom_qq_line()+
  labs(title=paste(x.lab, "QQ Plot"),
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


ggarrange(internet_scatter, internet_resid) #<change>
ggarrange(internet_QQ, internet_ResidQQ) #<change>
```

**Life Expectancy \~ Population**

```{r}
# Variable Names
x.lab <- "Population" #<change>
x.dat <- countries$population #<change>

y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)

  
# Create Linear Model
population_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
population_lm_summary <- summary(population_lm) #<change>
row.names(population_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>


# Display Values
kable(population_lm_summary$coefficients, #<change>
      caption=title)


# Scatterplot
population_scatter <- countries%>% #<change>
  ggplot(aes(y=life_expectancy, 
             x=x.dat))+
  geom_point(color='cyan4')+
  geom_smooth(method='lm', color="black")+
  labs(title=title,
       x=x.lab,
       y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual Plot
population_resid <- countries%>%  #<change>
  ggplot(aes(x=fitted(population_lm), #<change>
             y=residuals(population_lm) #<change>
             ))+
  geom_point(color="darkgoldenrod", shape=21)+
  geom_hline(yintercept=0)+
  labs(title="Residuals Against Fitted Values",
       x="Fitted Values",
       y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual QQ Plot
population_ResidQQ <- population_lm%>% #<change>
  ggplot(aes(sample=residuals(population_lm)))+ #<change>
  geom_qq(color="brown3", size=1.3)+
  geom_qq_line()+
  labs(title="Residual QQ Plot",
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Predictor QQ Plot
population_QQ <- population_lm%>% #<change>
  ggplot(aes(sample=x.dat))+
  geom_qq(color="forestgreen", size=1.3)+
  geom_qq_line()+
  labs(title=paste(x.lab, "QQ Plot"),
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


ggarrange(population_scatter, population_resid) #<change>
ggarrange(population_QQ, population_ResidQQ) #<change>
```

**Life Expectancy \~ Rural**

```{r}
# Variable Names
x.lab <- "Rural" #<change>
x.dat <- countries$rural #<change>

y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)

  
# Create Linear Model
rural_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
rural_lm_summary <- summary(rural_lm) #<change>
row.names(rural_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>


# Display Values
kable(rural_lm_summary$coefficients, #<change>
      caption=title)


# Scatterplot
rural_scatter <- countries%>% #<change>
  ggplot(aes(y=life_expectancy, 
             x=x.dat))+
  geom_point(color='cyan4')+
  geom_smooth(method='lm', color="black")+
  labs(title=title,
       x=x.lab,
       y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual Plot
rural_resid <- countries%>%  #<change>
  ggplot(aes(x=fitted(rural_lm), #<change>
             y=residuals(rural_lm) #<change>
             ))+
  geom_point(color="darkgoldenrod", shape=21)+
  geom_hline(yintercept=0)+
  labs(title="Residuals Against Fitted Values",
       x="Fitted Values",
       y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Residual QQ Plot
rural_ResidQQ <- rural_lm%>% #<change>
  ggplot(aes(sample=residuals(rural_lm)))+ #<change>
  geom_qq(color="brown3", size=1.3)+
  geom_qq_line()+
  labs(title="Residual QQ Plot",
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


# Predictor QQ Plot
rural_QQ <- rural_lm%>% #<change>
  ggplot(aes(sample=x.dat))+
  geom_qq(color="forestgreen", size=1.3)+
  geom_qq_line()+
  labs(title=paste(x.lab, "QQ Plot"),
       x="Theoretical Quantiles",
       y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))


ggarrange(rural_scatter, rural_resid) #<change>
ggarrange(rural_QQ, rural_ResidQQ) #<change>
```

## Transformations

```{r}
# Transformations
countries_new <- countries %>%
  mutate(co2=log(co2))%>%
  mutate(elderly_pop=log(elderly_pop))%>% 
  mutate(gdp=log(gdp))%>%
  mutate(internet=log(internet))
```

## New Models

```{r}
co_lm_new <- lm(life_expectancy ~ co2, data=countries_new)
co_lm_new_summary <- summary(co_lm_new)

elder_lm_new <- lm(life_expectancy ~ elderly_pop, data=countries_new)
elder_lm_new_summary <- summary(elder_lm_new)

gdp_lm_new <- lm(life_expectancy ~ gdp, data=countries_new)
gdp_lm_new_summary <- summary(gdp_lm_new)

internet_lm_new <- lm(life_expectancy ~ internet, data=countries_new)
internet_lm_new_summary <- summary(internet_lm_new)
```

**State All Rsq**

```{r}
kable(data.frame(
  "XVar"=c("Birth Rate", "Cell", "CO2", "Elderly Population", "GDP", "Health",
           "Internet", "Land Area", "Population", "Rural"),
  "Rsq"=c(birthrate_lm_summary$r.squared, cell_lm_summary$r.squared, 
          co_lm_summary$r.squared, elder_lm_summary$r.squared, gdp_lm_summary$r.squared,
          health_lm_summary$r.squared, internet_lm_summary$r.squared, landarea_lm_summary$r.squared,
          population_lm_summary$r.squared, rural_lm_summary$r.squared),
  
  "Adj.Rsq"=c(birthrate_lm_summary$adj.r.squared, cell_lm_summary$adj.r.squared, 
          co_lm_summary$adj.r.squared, elder_lm_summary$adj.r.squared, gdp_lm_summary$adj.r.squared,
          health_lm_summary$adj.r.squared, internet_lm_summary$adj.r.squared, landarea_lm_summary$adj.r.squared,
          population_lm_summary$adj.r.squared, rural_lm_summary$adj.r.squared),
  
  "Trans.Rsq"=c(NA, NA, co_lm_new_summary$r.squared, elder_lm_new_summary$r.squared, gdp_lm_new_summary$r.squared,
          NA, internet_lm_new_summary$r.squared, NA, NA, NA)
), caption="R Squared Values")
```

## Multifactor Models

```{r}
## Forward Selection

# Make Full Linear Model
full_model <- lm(life_expectancy ~ land_area + population + rural + health + 
                   internet + birth_rate + elderly_pop + co2 + gdp + cell, data=countries_new)

# Perform Forward Selection
forward_selection <- regsubsets(life_expectancy ~ land_area + population + rural + 
                                  health + internet + birth_rate + elderly_pop + 
                                  co2 + gdp + cell, data=countries_new, nbest=1, 
                                method = "forward")

summary_forward_selection <- summary(forward_selection)

# Find Best number of predictors
num_pred <- which.max(summary_forward_selection$adjr2)

# State which predictors to use
forward_predictors <- as.data.frame(summary_forward_selection$which[num_pred,])
forward_predictors <- rename(forward_predictors, "Include" = "summary_forward_selection$which[num_pred, ]")
kable(forward_predictors, caption="Forward Selection Predictiors")

# State Selection Process
kable(as.data.frame(summary_forward_selection$outmat), caption = paste0("Forward Selection Algorithm | nbest=", num_pred))


## Backward Elimination

# Make Full Linear Model
full_model <- lm(life_expectancy ~ land_area + population + rural + health + 
                   internet + birth_rate + elderly_pop + co2 + gdp + cell, data=countries_new)

# Perform Backward Selection
backward_elimination <- regsubsets(life_expectancy ~ land_area + population + rural + 
                                  health + internet + birth_rate + elderly_pop + 
                                  co2 + gdp + cell, data=countries_new, nbest=1, 
                                method = "backward")

summary_backward_elimination <- summary(backward_elimination)

# Find Best number of predictors
num_pred <- which.max(summary_backward_elimination$adjr2)

# State which predictors to use
backward_predictors <- as.data.frame(summary_backward_elimination$which[num_pred,])
backward_predictors <- rename(backward_predictors, "Include" = "summary_backward_elimination$which[num_pred, ]")
kable(backward_predictors, caption="Backward Elimination Predictiors")

# State Selection Process
kable(as.data.frame(summary_backward_elimination$outmat), caption = paste0("Backward Elimination Algorithm | nbest=", num_pred))
```

## Assess Multicollinearity

```{r}
names <- c("LandArea", "Population", "Rural", "Health", "Internet", "BirthRate",
           "ElderlyPop", "CO2", "GDP", "Cell")

datmat <- countries_new%>%
  select_("-country", "-code", "-life_expectancy")

datmat <- as.matrix.data.frame(datmat)
outmat <- matrix(data=Inf, nrow=10,ncol=10)

for (i in 1:10){
  for (j in 1:10){
    # Check for same column
    if (i == j){
      next
    }
    
    # Make Linear models
    model <- lm(life_expectancy ~ datmat[,i] + datmat[,j], data=countries_new)
    vifvals <- vif(model)
    outmat[i,j] = round(vifvals[1], 3)
    outmat[j,i] = round(vifvals[1], 3) 
    rm(model)
    rm(vifvals)
  }
}

rownames(outmat) <- names
colnames(outmat) <- names

kable(outmat, caption = "VIF Values")
```

## Best Model

```{r}
best_lm <- lm(life_expectancy ~ land_area + rural + health + internet + 
                birth_rate + elderly_pop + gdp + cell, data=countries_new)

best_lm_summary <- summary(best_lm)
```
