x=x.dat))+
geom_point(color='cyan4')+
geom_smooth(method='lm', color="black")+
labs(title=title,
x=x.lab,
y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual Plot
elder_resid <- countries%>%  #<change>
ggplot(aes(x=fitted(elder_lm), #<change>
y=residuals(elder_lm) #<change>
))+
geom_point(color="darkgoldenrod", shape=21)+
geom_hline(yintercept=0)+
labs(title="Residuals Against Fitted Values",
x="Fitted Values",
y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual QQ Plot
elder_ResidQQ <- elder_lm%>% #<change>
ggplot(aes(sample=residuals(elder_lm)))+ #<change>
geom_qq(color="brown3", size=1.3)+
geom_qq_line()+
labs(title="Residual QQ Plot",
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Predictor QQ Plot
elder_QQ <- elder_lm%>% #<change>
ggplot(aes(sample=x.dat))+
geom_qq(color="forestgreen", size=1.3)+
geom_qq_line()+
labs(title=paste(x.lab, "QQ Plot"),
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
ggarrange(elder_scatter, elder_resid) #<change>
ggarrange(elder_QQ, elder_ResidQQ) #<change>
# Variable Names
x.lab <- "GDP" #<change>
x.dat <- countries$gdp #<change>
y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)
# Create Linear Model
gdp_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
gdp_lm_summary <- summary(gdp_lm) #<change>
row.names(gdp_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>
# Display Values
kable(gdp_lm_summary$coefficients, #<change>
caption=title)
# Scatterplot
gdp_scatter <- countries%>% #<change>
ggplot(aes(y=life_expectancy,
x=x.dat))+
geom_point(color='cyan4')+
geom_smooth(method='lm', color="black")+
labs(title=title,
x=x.lab,
y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual Plot
gdp_resid <- countries%>%  #<change>
ggplot(aes(x=fitted(gdp_lm), #<change>
y=residuals(gdp_lm) #<change>
))+
geom_point(color="darkgoldenrod", shape=21)+
geom_hline(yintercept=0)+
labs(title="Residuals Against Fitted Values",
x="Fitted Values",
y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual QQ Plot
gdp_ResidQQ <- gdp_lm%>% #<change>
ggplot(aes(sample=residuals(gdp_lm)))+ #<change>
geom_qq(color="brown3", size=1.3)+
geom_qq_line()+
labs(title="Residual QQ Plot",
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Predictor QQ Plot
gdp_QQ <- gdp_lm%>% #<change>
ggplot(aes(sample=x.dat))+
geom_qq(color="forestgreen", size=1.3)+
geom_qq_line()+
labs(title=paste(x.lab, "QQ Plot"),
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
ggarrange(gdp_scatter, gdp_resid) #<change>
ggarrange(gdp_QQ, gdp_ResidQQ) #<change>
# Variable Names
x.lab <- "Health" #<change>
x.dat <- countries$health #<change>
y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)
# Create Linear Model
health_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
health_lm_summary <- summary(health_lm) #<change>
row.names(health_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>
# Display Values
kable(health_lm_summary$coefficients, #<change>
caption=title)
# Scatterplot
health_scatter <- countries%>% #<change>
ggplot(aes(y=life_expectancy,
x=x.dat))+
geom_point(color='cyan4')+
geom_smooth(method='lm', color="black")+
labs(title=title,
x=x.lab,
y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual Plot
health_resid <- countries%>%  #<change>
ggplot(aes(x=fitted(health_lm), #<change>
y=residuals(health_lm) #<change>
))+
geom_point(color="darkgoldenrod", shape=21)+
geom_hline(yintercept=0)+
labs(title="Residuals Against Fitted Values",
x="Fitted Values",
y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual QQ Plot
health_ResidQQ <- health_lm%>% #<change>
ggplot(aes(sample=residuals(health_lm)))+ #<change>
geom_qq(color="brown3", size=1.3)+
geom_qq_line()+
labs(title="Residual QQ Plot",
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Predictor QQ Plot
health_QQ <- health_lm%>% #<change>
ggplot(aes(sample=x.dat))+
geom_qq(color="forestgreen", size=1.3)+
geom_qq_line()+
labs(title=paste(x.lab, "QQ Plot"),
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
ggarrange(health_scatter, health_resid) #<change>
ggarrange(health_QQ, health_ResidQQ) #<change>
# Variable Names
x.lab <- "Internet" #<change>
x.dat <- countries$internet #<change>
y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)
# Create Linear Model
internet_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
internet_lm_summary <- summary(internet_lm) #<change>
row.names(internet_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>
# Display Values
kable(internet_lm_summary$coefficients, #<change>
caption=title)
# Scatterplot
internet_scatter <- countries%>% #<change>
ggplot(aes(y=life_expectancy,
x=x.dat))+
geom_point(color='cyan4')+
geom_smooth(method='lm', color="black")+
labs(title=title,
x=x.lab,
y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual Plot
internet_resid <- countries%>%  #<change>
ggplot(aes(x=fitted(internet_lm), #<change>
y=residuals(internet_lm) #<change>
))+
geom_point(color="darkgoldenrod", shape=21)+
geom_hline(yintercept=0)+
labs(title="Residuals Against Fitted Values",
x="Fitted Values",
y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual QQ Plot
internet_ResidQQ <- internet_lm%>% #<change>
ggplot(aes(sample=residuals(internet_lm)))+ #<change>
geom_qq(color="brown3", size=1.3)+
geom_qq_line()+
labs(title="Residual QQ Plot",
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Predictor QQ Plot
internet_QQ <- internet_lm%>% #<change>
ggplot(aes(sample=x.dat))+
geom_qq(color="forestgreen", size=1.3)+
geom_qq_line()+
labs(title=paste(x.lab, "QQ Plot"),
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
ggarrange(internet_scatter, internet_resid) #<change>
ggarrange(internet_QQ, internet_ResidQQ) #<change>
# Variable Names
x.lab <- "Population" #<change>
x.dat <- countries$population #<change>
y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)
# Create Linear Model
population_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
population_lm_summary <- summary(population_lm) #<change>
row.names(population_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>
# Display Values
kable(population_lm_summary$coefficients, #<change>
caption=title)
# Scatterplot
population_scatter <- countries%>% #<change>
ggplot(aes(y=life_expectancy,
x=x.dat))+
geom_point(color='cyan4')+
geom_smooth(method='lm', color="black")+
labs(title=title,
x=x.lab,
y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual Plot
population_resid <- countries%>%  #<change>
ggplot(aes(x=fitted(population_lm), #<change>
y=residuals(population_lm) #<change>
))+
geom_point(color="darkgoldenrod", shape=21)+
geom_hline(yintercept=0)+
labs(title="Residuals Against Fitted Values",
x="Fitted Values",
y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual QQ Plot
population_ResidQQ <- population_lm%>% #<change>
ggplot(aes(sample=residuals(population_lm)))+ #<change>
geom_qq(color="brown3", size=1.3)+
geom_qq_line()+
labs(title="Residual QQ Plot",
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Predictor QQ Plot
population_QQ <- population_lm%>% #<change>
ggplot(aes(sample=x.dat))+
geom_qq(color="forestgreen", size=1.3)+
geom_qq_line()+
labs(title=paste(x.lab, "QQ Plot"),
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
ggarrange(population_scatter, population_resid) #<change>
ggarrange(population_QQ, population_ResidQQ) #<change>
# Variable Names
x.lab <- "Rural" #<change>
x.dat <- countries$rural #<change>
y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)
# Create Linear Model
rural_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
rural_lm_summary <- summary(rural_lm) #<change>
row.names(rural_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>
# Display Values
kable(rural_lm_summary$coefficients, #<change>
caption=title)
# Scatterplot
rural_scatter <- countries%>% #<change>
ggplot(aes(y=life_expectancy,
x=x.dat))+
geom_point(color='cyan4')+
geom_smooth(method='lm', color="black")+
labs(title=title,
x=x.lab,
y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual Plot
rural_resid <- countries%>%  #<change>
ggplot(aes(x=fitted(rural_lm), #<change>
y=residuals(rural_lm) #<change>
))+
geom_point(color="darkgoldenrod", shape=21)+
geom_hline(yintercept=0)+
labs(title="Residuals Against Fitted Values",
x="Fitted Values",
y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual QQ Plot
rural_ResidQQ <- rural_lm%>% #<change>
ggplot(aes(sample=residuals(rural_lm)))+ #<change>
geom_qq(color="brown3", size=1.3)+
geom_qq_line()+
labs(title="Residual QQ Plot",
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Predictor QQ Plot
rural_QQ <- rural_lm%>% #<change>
ggplot(aes(sample=x.dat))+
geom_qq(color="forestgreen", size=1.3)+
geom_qq_line()+
labs(title=paste(x.lab, "QQ Plot"),
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
ggarrange(rural_scatter, rural_resid) #<change>
ggarrange(rural_QQ, rural_ResidQQ) #<change>
# Transformations
countries_new <- countries %>%
mutate(co2=log(co2))%>%
mutate(elderly_pop=log(elderly_pop))%>%
mutate(gdp=log(gdp))%>%
mutate(internet=log(internet))
co_lm_new <- lm(life_expectancy ~ co2, data=countries_new)
co_lm_new_summary <- summary(co_lm_new)
elder_lm_new <- lm(life_expectancy ~ elderly_pop, data=countries_new)
elder_lm_new_summary <- summary(elder_lm_new)
gdp_lm_new <- lm(life_expectancy ~ gdp, data=countries_new)
gdp_lm_new_summary <- summary(gdp_lm_new)
internet_lm_new <- lm(life_expectancy ~ internet, data=countries_new)
internet_lm_new_summary <- summary(internet_lm_new)
kable(data.frame(
"XVar"=c("Birth Rate", "Cell", "CO2", "Elderly Population", "GDP", "Health",
"Internet", "Land Area", "Population", "Rural"),
"Rsq"=c(birthrate_lm_summary$r.squared, cell_lm_summary$r.squared,
co_lm_summary$r.squared, elder_lm_summary$r.squared, gdp_lm_summary$r.squared,
health_lm_summary$r.squared, internet_lm_summary$r.squared, landarea_lm_summary$r.squared,
population_lm_summary$r.squared, rural_lm_summary$r.squared),
"Adj.Rsq"=c(birthrate_lm_summary$adj.r.squared, cell_lm_summary$adj.r.squared,
co_lm_summary$adj.r.squared, elder_lm_summary$adj.r.squared, gdp_lm_summary$adj.r.squared,
health_lm_summary$adj.r.squared, internet_lm_summary$adj.r.squared, landarea_lm_summary$adj.r.squared,
population_lm_summary$adj.r.squared, rural_lm_summary$adj.r.squared),
"Trans.Rsq"=c(NA, NA, co_lm_new_summary$r.squared, elder_lm_new_summary$r.squared, gdp_lm_new_summary$r.squared,
NA, internet_lm_new_summary$r.squared, NA, NA, NA)
), caption="R Squared Values")
## Forward Selection
# Make Full Linear Model
full_model <- lm(life_expectancy ~ population + rural + health +
internet + birth_rate + elderly_pop + co2 + gdp + cell, data=countries_new)
# Perform Forward Selection
forward_selection <- regsubsets(life_expectancy ~ population + rural +
health + internet + birth_rate + elderly_pop +
co2 + gdp + cell, data=countries_new, nbest=1,
method = "forward")
summary_forward_selection <- summary(forward_selection)
# Find Best number of predictors
num_pred <- which.max(summary_forward_selection$adjr2)
# State which predictors to use
forward_predictors <- as.data.frame(summary_forward_selection$which[num_pred,])
forward_predictors <- rename(forward_predictors, "Include" = "summary_forward_selection$which[num_pred, ]")
kable(forward_predictors, caption="Forward Selection Predictiors")
# State Selection Process
kable(as.data.frame(summary_forward_selection$outmat), caption = paste0("Forward Selection Algorithm | nbest=", num_pred))
## Backward Elimination
# Make Full Linear Model
full_model <- lm(life_expectancy ~ population + rural + health +
internet + birth_rate + elderly_pop + co2 + gdp + cell, data=countries_new)
# Perform Backward Selection
backward_elimination <- regsubsets(life_expectancy ~ population + rural +
health + internet + birth_rate + elderly_pop +
co2 + gdp + cell, data=countries_new, nbest=1,
method = "backward")
summary_backward_elimination <- summary(backward_elimination)
# Find Best number of predictors
num_pred <- which.max(summary_backward_elimination$adjr2)
# State which predictors to use
backward_predictors <- as.data.frame(summary_backward_elimination$which[num_pred,])
backward_predictors <- rename(backward_predictors, "Include" = "summary_backward_elimination$which[num_pred, ]")
kable(backward_predictors, caption="Backward Elimination Predictiors")
# State Selection Process
kable(as.data.frame(summary_backward_elimination$outmat), caption = paste0("Backward Elimination Algorithm | nbest=", num_pred))
names <- c("LandArea", "Population", "Rural", "Health", "Internet", "BirthRate",
"ElderlyPop", "CO2", "GDP", "Cell")
datmat <- countries_new%>%
select_("-country", "-code", "-life_expectancy")
datmat <- as.matrix.data.frame(datmat)
outmat <- matrix(data=Inf, nrow=10,ncol=10)
for (i in 1:10){
for (j in 1:10){
# Check for same column
if (i == j){
next
}
# Make Linear models
model <- lm(life_expectancy ~ datmat[,i] + datmat[,j], data=countries_new)
vifvals <- vif(model)
outmat[i,j] = round(vifvals[1], 3)
outmat[j,i] = round(vifvals[1], 3)
rm(model)
rm(vifvals)
}
}
rownames(outmat) <- names
colnames(outmat) <- names
kable(outmat, caption = "VIF Values")
## Forward Selection
# Make Full Linear Model
full_model <- lm(life_expectancy ~ land_area + population + rural + health +
internet + birth_rate + elderly_pop + co2 + gdp + cell, data=countries_new)
# Perform Forward Selection
forward_selection <- regsubsets(life_expectancy ~ land_area + population + rural +
health + internet + birth_rate + elderly_pop +
co2 + gdp + cell, data=countries_new, nbest=1,
method = "forward")
summary_forward_selection <- summary(forward_selection)
# Find Best number of predictors
num_pred <- which.max(summary_forward_selection$adjr2)
# State which predictors to use
forward_predictors <- as.data.frame(summary_forward_selection$which[num_pred,])
forward_predictors <- rename(forward_predictors, "Include" = "summary_forward_selection$which[num_pred, ]")
kable(forward_predictors, caption="Forward Selection Predictiors")
# State Selection Process
kable(as.data.frame(summary_forward_selection$outmat), caption = paste0("Forward Selection Algorithm | nbest=", num_pred))
## Backward Elimination
# Make Full Linear Model
full_model <- lm(life_expectancy ~ land_area + population + rural + health +
internet + birth_rate + elderly_pop + co2 + gdp + cell, data=countries_new)
# Perform Backward Selection
backward_elimination <- regsubsets(life_expectancy ~ land_area + population + rural +
health + internet + birth_rate + elderly_pop +
co2 + gdp + cell, data=countries_new, nbest=1,
method = "backward")
summary_backward_elimination <- summary(backward_elimination)
# Find Best number of predictors
num_pred <- which.max(summary_backward_elimination$adjr2)
# State which predictors to use
backward_predictors <- as.data.frame(summary_backward_elimination$which[num_pred,])
backward_predictors <- rename(backward_predictors, "Include" = "summary_backward_elimination$which[num_pred, ]")
kable(backward_predictors, caption="Backward Elimination Predictiors")
# State Selection Process
kable(as.data.frame(summary_backward_elimination$outmat), caption = paste0("Backward Elimination Algorithm | nbest=", num_pred))
length(countries)
length(countries$life_expectancy)
best_lm_summary$coefficients
best_lm_summary$coefficients[,1]
best_lm_summary$coefficients[1,]
best_lm_summary$coefficients[,1]
?pivotwider
?pivot_wider
output%>%
pivot_wider(names_from="Beta", values_from="Estimate")
# Libraries
suppressPackageStartupMessages({
library(readr)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(knitr)
library(plotrix)
library(ggpubr)
library(MASS)
library(lindia)
library(leaps)
library(car)
})
output%>%
pivot_wider(names_from="Beta", values_from="Estimate")
# Libraries
suppressPackageStartupMessages({
library(readr)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(knitr)
library(plotrix)
library(ggpubr)
library(MASS)
library(lindia)
library(leaps)
library(car)
library(tidyr)
})
output%>%
pivot_wider(names_from="Beta", values_from="Estimate")
output%>%
pivot_wider(names_from="Beta", values_from="Estimate")
output <- data.frame(
"Beta"=c("b0", "b1", "b2", "b3", "b4", "b5"),
"Estimate"= best_lm_summary$coefficients[,1]
)
output%>%
pivot_wider(names_from="Beta", values_from="Estimate")
rownames(output) <- "Estimate"
rownames(output) <- c("Estimate")
rownames(output)
output <- output%>%
pivot_wider(names_from="Beta", values_from="Estimate")
rownames(output) <- "Estimate"
rownames
output <- output%>%
pivot_wider(names_from="Beta", values_from="Estimate")%>%
as.data.frame(.)
output <- data.frame(
"Beta"=c("b0", "b1", "b2", "b3", "b4", "b5"),
"Estimate"= best_lm_summary$coefficients[,1]
)
output <- output%>%
pivot_wider(names_from="Beta", values_from="Estimate")%>%
as.data.frame(.)
rownames(output) <- "Estimate"
output
kable(output)
# Load Data
countries <- read.csv("countries.csv")
countries <- janitor::clean_names(countries)
# Select Subset
n <- nrow(countries)
set.seed(39) # HATSUNE MIKU
subset_id <- sample(n, 0.8*n)
countries <- countries[subset_id, ]
# Transformations
countries_new <- countries %>%
mutate(co2=log(co2))%>%
mutate(elderly_pop=log(elderly_pop))%>%
mutate(gdp=log(gdp))%>%
mutate(internet=log(internet))
