ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Predictor QQ Plot
co_QQ <- co_lm%>% #<change>
ggplot(aes(sample=x.dat))+
geom_qq(color="forestgreen", size=1.3)+
geom_qq_line()+
labs(title=paste(x.lab, "QQ Plot"),
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
ggarrange(co_scatter, co_resid) #<change>
ggarrange(co_QQ, co_ResidQQ) #<change>
# Variable Names
x.lab <- "Elderly Population" #<change>
x.dat <- countries$elderly_pop #<change>
y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)
# Create Linear Model
elder_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
elder_lm_summary <- summary(elder_lm) #<change>
row.names(elder_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>
# Display Values
kable(elder_lm_summary$coefficients, #<change>
caption=title)
# Scatterplot
elder_scatter <- countries%>% #<change>
ggplot(aes(y=life_expectancy,
x=x.dat))+
geom_point(color='cyan4')+
geom_smooth(method='lm', color="black")+
labs(title=title,
x=x.lab,
y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual Plot
elder_resid <- countries%>%  #<change>
ggplot(aes(x=fitted(elder_lm), #<change>
y=residuals(elder_lm) #<change>
))+
geom_point(color="darkgoldenrod", shape=21)+
geom_hline(yintercept=0)+
labs(title="Residuals Against Fitted Values",
x="Fitted Values",
y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual QQ Plot
elder_ResidQQ <- elder_lm%>% #<change>
ggplot(aes(sample=residuals(elder_lm)))+ #<change>
geom_qq(color="brown3", size=1.3)+
geom_qq_line()+
labs(title="Residual QQ Plot",
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Predictor QQ Plot
elder_QQ <- elder_lm%>% #<change>
ggplot(aes(sample=x.dat))+
geom_qq(color="forestgreen", size=1.3)+
geom_qq_line()+
labs(title=paste(x.lab, "QQ Plot"),
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
ggarrange(elder_scatter, elder_resid) #<change>
ggarrange(elder_QQ, elder_ResidQQ) #<change>
# Variable Names
x.lab <- "GDP" #<change>
x.dat <- countries$gdp #<change>
y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)
# Create Linear Model
gdp_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
gdp_lm_summary <- summary(gdp_lm) #<change>
row.names(gdp_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>
# Display Values
kable(gdp_lm_summary$coefficients, #<change>
caption=title)
# Scatterplot
gdp_scatter <- countries%>% #<change>
ggplot(aes(y=life_expectancy,
x=x.dat))+
geom_point(color='cyan4')+
geom_smooth(method='lm', color="black")+
labs(title=title,
x=x.lab,
y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual Plot
gdp_resid <- countries%>%  #<change>
ggplot(aes(x=fitted(gdp_lm), #<change>
y=residuals(gdp_lm) #<change>
))+
geom_point(color="darkgoldenrod", shape=21)+
geom_hline(yintercept=0)+
labs(title="Residuals Against Fitted Values",
x="Fitted Values",
y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual QQ Plot
gdp_ResidQQ <- gdp_lm%>% #<change>
ggplot(aes(sample=residuals(gdp_lm)))+ #<change>
geom_qq(color="brown3", size=1.3)+
geom_qq_line()+
labs(title="Residual QQ Plot",
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Predictor QQ Plot
gdp_QQ <- gdp_lm%>% #<change>
ggplot(aes(sample=x.dat))+
geom_qq(color="forestgreen", size=1.3)+
geom_qq_line()+
labs(title=paste(x.lab, "QQ Plot"),
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
ggarrange(gdp_scatter, gdp_resid) #<change>
ggarrange(gdp_QQ, gdp_ResidQQ) #<change>
# Variable Names
x.lab <- "Health" #<change>
x.dat <- countries$health #<change>
y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)
# Create Linear Model
health_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
health_lm_summary <- summary(health_lm) #<change>
row.names(health_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>
# Display Values
kable(health_lm_summary$coefficients, #<change>
caption=title)
# Scatterplot
health_scatter <- countries%>% #<change>
ggplot(aes(y=life_expectancy,
x=x.dat))+
geom_point(color='cyan4')+
geom_smooth(method='lm', color="black")+
labs(title=title,
x=x.lab,
y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual Plot
health_resid <- countries%>%  #<change>
ggplot(aes(x=fitted(health_lm), #<change>
y=residuals(health_lm) #<change>
))+
geom_point(color="darkgoldenrod", shape=21)+
geom_hline(yintercept=0)+
labs(title="Residuals Against Fitted Values",
x="Fitted Values",
y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual QQ Plot
health_ResidQQ <- health_lm%>% #<change>
ggplot(aes(sample=residuals(health_lm)))+ #<change>
geom_qq(color="brown3", size=1.3)+
geom_qq_line()+
labs(title="Residual QQ Plot",
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Predictor QQ Plot
health_QQ <- health_lm%>% #<change>
ggplot(aes(sample=x.dat))+
geom_qq(color="forestgreen", size=1.3)+
geom_qq_line()+
labs(title=paste(x.lab, "QQ Plot"),
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
ggarrange(health_scatter, health_resid) #<change>
ggarrange(health_QQ, health_ResidQQ) #<change>
# Variable Names
x.lab <- "Internet" #<change>
x.dat <- countries$internet #<change>
y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)
# Create Linear Model
internet_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
internet_lm_summary <- summary(internet_lm) #<change>
row.names(internet_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>
# Display Values
kable(internet_lm_summary$coefficients, #<change>
caption=title)
# Scatterplot
internet_scatter <- countries%>% #<change>
ggplot(aes(y=life_expectancy,
x=x.dat))+
geom_point(color='cyan4')+
geom_smooth(method='lm', color="black")+
labs(title=title,
x=x.lab,
y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual Plot
internet_resid <- countries%>%  #<change>
ggplot(aes(x=fitted(internet_lm), #<change>
y=residuals(internet_lm) #<change>
))+
geom_point(color="darkgoldenrod", shape=21)+
geom_hline(yintercept=0)+
labs(title="Residuals Against Fitted Values",
x="Fitted Values",
y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual QQ Plot
internet_ResidQQ <- internet_lm%>% #<change>
ggplot(aes(sample=residuals(internet_lm)))+ #<change>
geom_qq(color="brown3", size=1.3)+
geom_qq_line()+
labs(title="Residual QQ Plot",
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Predictor QQ Plot
internet_QQ <- internet_lm%>% #<change>
ggplot(aes(sample=x.dat))+
geom_qq(color="forestgreen", size=1.3)+
geom_qq_line()+
labs(title=paste(x.lab, "QQ Plot"),
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
ggarrange(internet_scatter, internet_resid) #<change>
ggarrange(internet_QQ, internet_ResidQQ) #<change>
# Variable Names
x.lab <- "Population" #<change>
x.dat <- countries$population #<change>
y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)
# Create Linear Model
population_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
population_lm_summary <- summary(population_lm) #<change>
row.names(population_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>
# Display Values
kable(population_lm_summary$coefficients, #<change>
caption=title)
# Scatterplot
population_scatter <- countries%>% #<change>
ggplot(aes(y=life_expectancy,
x=x.dat))+
geom_point(color='cyan4')+
geom_smooth(method='lm', color="black")+
labs(title=title,
x=x.lab,
y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual Plot
population_resid <- countries%>%  #<change>
ggplot(aes(x=fitted(population_lm), #<change>
y=residuals(population_lm) #<change>
))+
geom_point(color="darkgoldenrod", shape=21)+
geom_hline(yintercept=0)+
labs(title="Residuals Against Fitted Values",
x="Fitted Values",
y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual QQ Plot
population_ResidQQ <- population_lm%>% #<change>
ggplot(aes(sample=residuals(population_lm)))+ #<change>
geom_qq(color="brown3", size=1.3)+
geom_qq_line()+
labs(title="Residual QQ Plot",
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Predictor QQ Plot
population_QQ <- population_lm%>% #<change>
ggplot(aes(sample=x.dat))+
geom_qq(color="forestgreen", size=1.3)+
geom_qq_line()+
labs(title=paste(x.lab, "QQ Plot"),
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
ggarrange(population_scatter, population_resid) #<change>
ggarrange(population_QQ, population_ResidQQ) #<change>
# Variable Names
x.lab <- "Rural" #<change>
x.dat <- countries$rural #<change>
y.lab <- "Life Expectancy"
title <- paste(y.lab, "~", x.lab)
# Create Linear Model
rural_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
rural_lm_summary <- summary(rural_lm) #<change>
row.names(rural_lm_summary$coefficients) <- c("(Intercept)", x.lab) #<change>
# Display Values
kable(rural_lm_summary$coefficients, #<change>
caption=title)
# Scatterplot
rural_scatter <- countries%>% #<change>
ggplot(aes(y=life_expectancy,
x=x.dat))+
geom_point(color='cyan4')+
geom_smooth(method='lm', color="black")+
labs(title=title,
x=x.lab,
y=y.lab)
ggsave(filename=paste(x.lab, "Scatterplot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual Plot
rural_resid <- countries%>%  #<change>
ggplot(aes(x=fitted(rural_lm), #<change>
y=residuals(rural_lm) #<change>
))+
geom_point(color="darkgoldenrod", shape=21)+
geom_hline(yintercept=0)+
labs(title="Residuals Against Fitted Values",
x="Fitted Values",
y="Residuals")
ggsave(filename=paste(x.lab, "Residual Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Residual QQ Plot
rural_ResidQQ <- rural_lm%>% #<change>
ggplot(aes(sample=residuals(rural_lm)))+ #<change>
geom_qq(color="brown3", size=1.3)+
geom_qq_line()+
labs(title="Residual QQ Plot",
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste("Residual QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
# Predictor QQ Plot
rural_QQ <- rural_lm%>% #<change>
ggplot(aes(sample=x.dat))+
geom_qq(color="forestgreen", size=1.3)+
geom_qq_line()+
labs(title=paste(x.lab, "QQ Plot"),
x="Theoretical Quantiles",
y="Sample Quantiles")
ggsave(filename=paste(x.lab, "QQ Plot.png"), device = "png", path=paste0("../Plots/", x.lab))
ggarrange(rural_scatter, rural_resid) #<change>
ggarrange(rural_QQ, rural_ResidQQ) #<change>
# CO2
gg_boxcox(co_lm)
# CO2
gg_boxcox(co_lm, lambdaSF=2)
library(MASS)
boxcox(co_lm,plotit=T)
boxcox(co_lm,plotit=T)$x[which.max(bc$y)]
test <- boxcox(co_lm,plotit=T)
$x[which.max(test$y)]
test$x[which.max(test$y)]
# CO2
model <- co_lm
bc_plot <- gg_boxcox(model, lambdaSF = 2)
co_bc <- boxcox(model)
co_lambda <- co_bc$x[which.max(co_bc$y)]
bc_plot+
labs(subtitle=paste("lambda=",co_lambda))
bc_plot
bc_plot+
labs(subtitle=paste("lambda=",co_lambda))
bc_plot+
labs(subtitle=paste("lambda=",co_lambda))
# CO2
model <- co_lm
bc_plot <- gg_boxcox(model, lambdaSF = 2)
co_bc <- boxcox(model)
co_lambda <- co_bc$x[which.max(co_bc$y)]
bc_plot+
labs(subtitle=paste("lambda=",co_lambda))
# CO2
model <- co_lm
bc_plot <- gg_boxcox(model, lambdaSF = 2)
co_bc <- boxcox(model, plotit = F)
co_lambda <- co_bc$x[which.max(co_bc$y)]
bc_plot+
labs(subtitle=paste("lambda=",co_lambda))
# CO2
model <- co_lm
bc_plot <- gg_boxcox(model, lambdaSF = 2)
co_bc <- boxcox(model, plotit = F)
co_lambda <- co_bc$x[which.max(co_bc$y)]
bc_plot+
labs(subtitle=paste("lambda =",co_lambda))
# CO2
x.lab <- "CO2"
model <- co_lm
bc_plot <- gg_boxcox(model, lambdaSF = 2)
co_bc <- boxcox(model, plotit = F)
co_lambda <- co_bc$x[which.max(co_bc$y)]
bc_plot+
labs(title=paste(x.lab,"Boxcox Plot"),
subtitle=paste("lambda =",co_lambda))
# CO2
x.lab <- "CO2"
model <- co_lm
bc_plot <- gg_boxcox(model, lambdaSF = 2)
co_bc <- boxcox(model, plotit = F)
co_lambda <- co_bc$x[which.max(co_bc$y)]
bc_plot+
labs(title=paste(x.lab,"Boxcox Plot"),
subtitle=paste("lambda =",co_lambda))
# Land Area
x.lab <- "Land Area"
model <- landarea_lm
bc_plot <- gg_boxcox(model, lambdaSF = 2)
landarea_bc <- boxcox(model, plotit = F)
landarea_lambda <- co_bc$x[which.max(co_bc$y)]
bc_plot+
labs(title=paste(x.lab,"Boxcox Plot"),
subtitle=paste("lambda =",co_lambda))
# CO2
x.lab <- "CO2"
model <- co_lm
bc_plot <- gg_boxcox(model, lambdaSF = 2)
co_bc <- boxcox(model, plotit = F)
co_lambda <- co_bc$x[which.max(co_bc$y)]
bc_plot+
labs(title=paste(x.lab,"Boxcox Plot"),
subtitle=paste("lambda =",co_lambda))
# Land Area
x.lab <- "Land Area"
model <- landarea_lm
bc_plot <- gg_boxcox(model, lambdaSF = 2)
landarea_bc <- boxcox(model, plotit = F)
landarea_lambda <- landarea_bc$x[which.max(landarea_bc$y)]
bc_plot+
labs(title=paste(x.lab,"Boxcox Plot"),
subtitle=paste("lambda =",co_lambda))
landarea_lm
boxcox(landarea_lm)
boxcox(co_lm)
boxcox(cell_lm)
boxcox(elder_lm)
boxcox(elder_lmd)
View(countries)
# Transformation of Response Variable
lambda = 2
countries_new <- mutate(countries, life_expectancy=((life_expectancy^lambda-1)/lambda))
# Life Expectancy QQ Plot
ggplot(data=countries_new, aes(sample=life_expectancy))+
geom_qq(color="forestgreen", size=1.3)+
geom_qq_line()+
labs(title="Response QQ Plot",
x="Theoretical Quantiles",
y="Sample Quantiles")
# Life Expectancy QQ Plot
ggplot(data=countries, aes(sample=life_expectancy))+
geom_qq(color="forestgreen", size=1.3)+
geom_qq_line()+
labs(title="Response QQ Plot",
x="Theoretical Quantiles",
y="Sample Quantiles")
# Life Expectancy QQ Plot
ggplot(data=countries_new, aes(sample=life_expectancy))+
geom_qq(color="forestgreen", size=1.3)+
geom_qq_line()+
labs(title="Response QQ Plot",
x="Theoretical Quantiles",
y="Sample Quantiles")
co_lm <- lm(life_expectancy ~ x.dat, data=countries_new) #<change>
# CO2
x.lab <- "CO2"
model <- co_lm
bc_plot <- gg_boxcox(model, lambdaSF = 2)
co_bc <- boxcox(model, plotit = F)
co_lambda <- co_bc$x[which.max(co_bc$y)]
# CO2
x.lab <- "CO2"
model <- co_lm
bc_plot <- gg_boxcox(model, lambdaSF = 2)
co_bc <- boxcox(model, plotit = F)
co_lambda <- co_bc$x[which.max(co_bc$y)]
bc_plot+
labs(title=paste(x.lab,"Boxcox Plot"),
subtitle=paste("lambda =",co_lambda))
x.lab <- "Land Area"
model <- landarea_lm
bc_plot <- gg_boxcox(model, lambdaSF = 2)
landarea_bc <- boxcox(model, plotit = F)
landarea_lambda <- landarea_bc$x[which.max(landarea_bc$y)]
landarea_lm <- lm(life_expectancy ~ x.dat, data=countries_new) #<change>
# Land Area
x.lab <- "Land Area"
model <- landarea_lm
bc_plot <- gg_boxcox(model, lambdaSF = 2)
landarea_bc <- boxcox(model, plotit = F)
landarea_lambda <- landarea_bc$x[which.max(landarea_bc$y)]
bc_plot+
labs(title=paste(x.lab,"Boxcox Plot"),
subtitle=paste("lambda =",co_lambda))
# CO2
x.lab <- "CO2"
model <- co_lm
bc_plot <- gg_boxcox(model, lambdaSF = 2)
co_bc <- boxcox(model, plotit = F)
co_lambda <- co_bc$x[which.max(co_bc$y)]
bc_plot+
labs(title=paste(x.lab,"Boxcox Plot"),
subtitle=paste("lambda =",co_lambda))
# Land Area
x.lab <- "Land Area"
model <- landarea_lm
bc_plot <- gg_boxcox(model, lambdaSF = 2)
landarea_bc <- boxcox(model, plotit = F)
landarea_lambda <- landarea_bc$x[which.max(landarea_bc$y)]
bc_plot+
labs(title=paste(x.lab,"Boxcox Plot"),
subtitle=paste("lambda =",co_lambda))
boxplot(countries$life_expectancy)
hist(countries$life_expectancy)
co_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
landarea_lm <- lm(life_expectancy ~ x.dat, data=countries) #<change>
lm(life_expectancy ~ co2, data=countries)
lm(life_expectancy ~ log(co2), data=countries)
summary(lm(life_expectancy ~ log(co2), data=countries))
countries%>%
ggplot(aes(x=log(co2), y=life_expectancy))+
geom_smooth(method = "lm")
countries%>%
ggplot(aes(x=log(co2), y=life_expectancy))+
geom_smooth(method = "lm")+
geom_point()
